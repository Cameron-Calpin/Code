#!/usr/bin/python
import cgi, os, sys, string

def gush(data):
	print "Content-type: text/html\n"
	print "<h3>Thanks, %(name)s!</h3>" % vars(data)
	print "Our customer's comments are always appreciated."
	print "They drive our business directions, as well as"
	print "help us with our karma."
	print "<p>Thanks again for the feedback!</p>"
	print "And feel free to enter more comments if you wish."
	print "<p>"+10*"&nbsp;"+"--Joe."

def whimper(data):
	print "Content-type: text/html\n"
	print "<h3>Sorry, %(name)s!</h3>" % vars(data)
	print "We're very sorry to read that you had a complaint"
	print "regarding out product__We'll read your comments"
	print "carefully and will be in touch with you."
	print "<p>Nevertheless, thanks for the feedback.</p>"
	print "<p>"+10*"&nbsp;"+"--Joe.</p>"

def bail():
	print "<H3>Error filling out form</H3>"
	print "<P>Please fill in all the field in the form.</P>"
	print '<a href="http://localhost/comment.html">'
	print 'Go back to the form</a>'
	sys.exit()

class FormData:
	""" A repository for information gleaned from a CGI form """
	def __init__(self, form):
		for fieldname in self.fieldnames:
			if not form.has_key(fieldname) or form[fieldname].value == "":
				bail()
			else:
				setattr(self, fieldname, form[fieldname].value)


class FeedbackData(FormData):
	""" A FormData generated by the comment.html form. """
	fieldnames = ('name', 'address', 'email', 'type', 'text')
	def __repr__(self):
		return "%(type)s from %(name)s on %(time)s" % vars(self)

DIRECTORY = r'/home/frostbyte/Desktop/Code/Code/Python - learning/Frameworks and Applications'

if __name__ == '__main__':
	sys.stderr = sys.stdout
	form = cgi.FieldStorage()
	data = FeedbackData(form)
	if data.type == 'comment':
		gush(data)
	else:
		whimper(data)

	# save the data to file
	import tempfile, pickle, time
	tempfile.tempdir = DIRECTORY
	data.time = time.asctime(time.localtime(time.time()))
	pickle.dump(data, open(tempfile.mktemp(), 'w'))
